/**********************************************************************
 *
 *   Component hook generated by Quest
 *
 *   Code Logic for the component goes in this hook
 *   To setup bindings that use the data here or call the functions here, use the Quest editor
 *   Do not change the name of the hook
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React, { useState } from 'react'
import useLayoutProductPage1ResponsiveSize from './useLayoutProductPage1ResponsiveSize'

/* These are the possible values for the current variant. Use this to change the currentVariant dynamically.
Please don't modify */
const variantOptions = {
  ScreenDesktop: 'ScreenDesktop',
  ScreenTablet: 'ScreenTablet',
  ScreenMobile: 'ScreenMobile',
}

const useLayoutProductPage1 = () => {
  const [currentVariant, setCurrentVariant] = React.useState(
    variantOptions['ScreenDesktop']
  )

  const [products, setProducts] = React.useState([])
  const [product, setProduct] = React.useState(null)
  const [cart, setCart] = useState([])

  const breakpointsVariant = useLayoutProductPage1ResponsiveSize()

  React.useEffect(() => {
    if (breakpointsVariant !== currentVariant) {
      setCurrentVariant(breakpointsVariant)
    }
  }, [breakpointsVariant])

  const handleAddToCart = (product) => {
    const items = JSON.parse(localStorage.getItem('items') ?? '[]')
    items.push(product)
    localStorage.setItem('items', JSON.stringify(items))
    setCart(items)
  }

  const data = { currentVariant }

  const fns = { setCurrentVariant, handleAddToCart }

  return { data, fns }
}

export default useLayoutProductPage1
